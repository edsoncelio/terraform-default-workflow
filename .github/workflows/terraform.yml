name: Terraform workflow
on:
  workflow_call:
    inputs:
      tf_version:
        description: 'Terraform version'
        default: '1.0.0'
        required: false
        type: string
      tf_wrapper:
        description: 'If will use Terraform wrapper'
        default: false
        required: false
        type: boolean
      tf_command_fmt:
        description: 'Terraform fmt command'
        default: 'terraform fmt -check'
        required: false
        type: string
      tf_command_init:
        description: 'Terraform init command'
        default: 'terraform init'
        required: false
        type: string
      tf_command_validate:
        description: 'Terraform validate command'
        default: 'terraform validate -no-color'
        required: false
        type: string
      command_wrk_dir:
        description: 'Working dir'
        default: './'
        required: false
        type: string
      command_continue_error:
        description: 'Continue on error'
        default: true
        required: false
        type: boolean
    secrets:
      token:
        required: true

jobs:
  jobs_terraform:
    name: Terraform core workflow
    runs-on: ubuntu-18.04
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ inputs.tf_version }}
          terraform_wrapper: ${{ inputs.tf_wrapper }}

      - name: Terraform format
        id: fmt
        run: ${{ inputs.tf_command_fmt }}
        continue-on-error: ${{ inputs.command_continue_error }}
        working-directory: ${{ inputs.command_wrk_dir }}

      - name: Terraform init
        id: init
        run: ${{ inputs.tf_command_init }}
        working-directory: ${{ inputs.command_wrk_dir }}

      - name: Terraform validate
        id: validate
        run: ${{ inputs.tf_command_validate }}
        working-directory: ${{ inputs.command_wrk_dir }}
        
      - name: Terraform plan
        id: plan
        run: ${{ inputs.tf_command_plan }}
        working-directory: ${{ inputs.command_wrk_dir }}
            
  jobs_checkov:
    name: Checkov workflow
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-18.04
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: TFSec validation
        uses: aquasecurity/tfsec-pr-commenter-action@main
        with:
          github_token: ${{ secrets.token }}
